[tool.poetry]
name = "caridata-backend"
version = "0.1.0"
description = ""
authors = ["jjmllr <68501961+jjmllr@users.noreply.github.com>"]

[tool.poetry.dependencies]
python = "^3.11"
pandas = "^2.2.1"
openpyxl = "^3.1.2"
pre-commit = "^3.7.0"
regex = "^2023.12.25"
faker = "^24.4.0"
fastapi = "^0.111.0"
sqlalchemy = "^2.0.30"
pydantic = "^2.7.1"
pydantic-settings = "^2.2.1"
alembic = "^1.13.1"
asyncpg = "^0.29.0"
fastapi-users = { extras = ["sqlalchemy"], version = "^13.0.0" }
starlette-csrf = "^3.0.0"
uvicorn = "^0.30.1"
gunicorn = "^22.0.0"
httpx = "^0.27.0"
jinja2 = "^3.1.4"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.0"
nodeenv = "^1.8.0"
pytest-asyncio = "^0.23.8"

[tool.ruff.lint]
# Linting configuration for Ruff

# Ignore the following linting rules:
# - D100: Missing docstring in public module
# - D104: Missing docstring in public package
# - D203: 1 blank line required before class docstring
# - D401: First line should be in imperative mood
ignore = ["D100", "D104", "D203", "D401"]
# Disable fix for unused imports (`F401`)
unfixable = ["F401"]

[tool.ruff.lint.pydocstyle]
# Use the numpy convention for docstrings
convention = "numpy"

[tool.ruff.format]
# Enable reformatting of code snippets in docstrings
docstring-code-format = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
