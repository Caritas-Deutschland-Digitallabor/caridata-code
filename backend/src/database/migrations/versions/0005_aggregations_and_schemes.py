"""aggregations_and_schemas

Revision ID: 0005
Revises: 0004
Create Date: 2024-09-09 11:32:35.614618

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "0005"
down_revision = "0004"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "aggregation_schemas",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("filter", sa.JSON(), nullable=True),
        sa.Column("is_distinct", sa.Boolean(), nullable=False),
        sa.Column("aggregation_type", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("deprecated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "aggregations",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("schema_id", sa.Uuid(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("aggregation_variable_id", sa.String(), nullable=False),
        sa.Column("group_variable_1_id", sa.String(), nullable=True),
        sa.Column("group_variable_2_id", sa.String(), nullable=True),
        sa.Column("source", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("deprecated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["aggregation_variable_id"], ["variables.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["group_variable_1_id"], ["variables.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["group_variable_2_id"], ["variables.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["schema_id"], ["aggregation_schemas.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("aggregations")
    op.drop_table("aggregation_schemas")
    # ### end Alembic commands ###
